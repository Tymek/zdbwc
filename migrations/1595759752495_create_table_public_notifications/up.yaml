- args:
    cascade: false
    read_only: false
    sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
  type: run_sql
- args:
    cascade: false
    read_only: false
    sql: "CREATE TABLE \"public\".\"notification\"(\"id\" uuid NOT NULL DEFAULT gen_random_uuid(),
      \"created_at\" timestamptz NOT NULL DEFAULT now(), \"updated_at\" timestamptz
      NOT NULL DEFAULT now(), \"published_at\" timestamp without time zone NOT NULL
      DEFAULT now(), \"title\" text, \"content\" text, PRIMARY KEY (\"id\") );\nCREATE
      OR REPLACE FUNCTION \"public\".\"set_current_timestamp_updated_at\"()\nRETURNS
      TRIGGER AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updated_at\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_notification_updated_at\"\nBEFORE
      UPDATE ON \"public\".\"notification\"\nFOR EACH ROW\nEXECUTE PROCEDURE \"public\".\"set_current_timestamp_updated_at\"();\nCOMMENT
      ON TRIGGER \"set_public_notification_updated_at\" ON \"public\".\"notification\"
      \nIS 'trigger to set value of column \"updated_at\" to current timestamp on
      row update';"
  type: run_sql
- args:
    name: notification
    schema: public
  type: add_existing_table_or_view
