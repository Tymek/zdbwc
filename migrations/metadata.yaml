version: 2
tables:
- table:
    schema: public
    name: notification
  insert_permissions:
  - role: manager
    permission:
      check: {}
      columns:
      - content
      - is_pinned
      - published_at
      - title
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - content
      - id
      - is_pinned
      - published_at
      - title
      filter: {}
  - role: manager
    permission:
      columns:
      - content
      - created_at
      - id
      - is_pinned
      - published_at
      - title
      - updated_at
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: manager
    permission:
      columns:
      - content
      - is_pinned
      - published_at
      - title
      filter: {}
      check: null
  delete_permissions:
  - role: manager
    permission:
      filter: {}
- table:
    schema: public
    name: session
  array_relationships:
  - name: topics
    using:
      foreign_key_constraint_on:
        column: session_id
        table:
          schema: public
          name: topic
  insert_permissions:
  - role: manager
    permission:
      check: {}
      columns:
      - ends_at
      - name
      - speaker
      - begins_at
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - ends_at
      - id
      - name
      - speaker
      - begins_at
      filter: {}
  - role: manager
    permission:
      columns:
      - name
      - speaker
      - created_at
      - ends_at
      - begins_at
      - updated_at
      - id
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: manager
    permission:
      columns:
      - ends_at
      - name
      - speaker
      - begins_at
      filter: {}
      check: null
  delete_permissions:
  - role: manager
    permission:
      filter: {}
- table:
    schema: public
    name: topic
  object_relationships:
  - name: session
    using:
      foreign_key_constraint_on: session_id
  insert_permissions:
  - role: manager
    permission:
      check: {}
      columns:
      - description
      - location
      - subject
      - session_id
      - speaker
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - description
      - id
      - location
      - subject
      - session_id
      - speaker
      filter: {}
  - role: manager
    permission:
      columns:
      - description
      - location
      - subject
      - speaker
      - created_at
      - updated_at
      - id
      - session_id
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: manager
    permission:
      columns:
      - description
      - location
      - subject
      - session_id
      - speaker
      filter: {}
      check: null
  delete_permissions:
  - role: manager
    permission:
      filter: {}
- table:
    schema: public
    name: user
actions:
- name: login
  definition:
    handler: http://next:3000/api/login
    output_type: UserInfo
    forward_client_headers: true
    headers:
    - name: x-hasura-action-secret
      value_from_env: HASURA_ACTION_SECRET
    arguments:
    - name: username
      type: String!
    - name: password
      type: String!
    type: mutation
    kind: synchronous
  permissions:
  - role: anonymous
  - role: manager
- name: logout
  definition:
    handler: http://next:3000/api/logout
    output_type: UserInfo
    forward_client_headers: true
    headers:
    - name: x-hasura-action-secret
      value_from_env: HASURA_ACTION_SECRET
    type: mutation
    kind: synchronous
  permissions:
  - role: manager
- name: me
  definition:
    handler: http://next:3000/api/me
    output_type: UserInfo
    forward_client_headers: true
    headers:
    - name: x-hasura-action-secret
      value_from_env: HASURA_ACTION_SECRET
    type: query
  permissions:
  - role: manager
custom_types:
  objects:
  - name: UserInfo
    fields:
    - name: id
      type: uuid!
    - name: username
      type: String!
    relationships:
    - remote_table:
        schema: public
        name: user
      name: user
      type: object
      field_mapping:
        username: username
        id: id
